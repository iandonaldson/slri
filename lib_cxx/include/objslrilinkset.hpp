/* $Id: objslrilinkset.hpp,v 1.2 2003/09/30 18:08:51 haocl Exp $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using specifications from the data definition file
 *   'slrilinkset.asn'.
 */

#ifndef OBJSLRILINKSET_HPP
#define OBJSLRILINKSET_HPP


// generated includes
#include <objslrilinkset_.hpp>

// generated classes

BEGIN_slri_SCOPE // namespace slri::

class CYLink_set_List3 : public CYLink_set_List3_Base
{
    typedef CYLink_set_List3_Base Tparent;
public:
    // constructor
    CYLink_set_List3(void);
    // destructor
    ~CYLink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CYLink_set_List3(const CYLink_set_List3& value);
    CYLink_set_List3& operator=(const CYLink_set_List3& value);

};



/////////////////// CYLink_set_List3 inline methods

// constructor
inline
CYLink_set_List3::CYLink_set_List3(void)
{
}


/////////////////// end of CYLink_set_List3 inline methods


class CYLink_set_List2 : public CYLink_set_List2_Base
{
    typedef CYLink_set_List2_Base Tparent;
public:
    // constructor
    CYLink_set_List2(void);
    // destructor
    ~CYLink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CYLink_set_List2(const CYLink_set_List2& value);
    CYLink_set_List2& operator=(const CYLink_set_List2& value);

};



/////////////////// CYLink_set_List2 inline methods

// constructor
inline
CYLink_set_List2::CYLink_set_List2(void)
{
}


/////////////////// end of CYLink_set_List2 inline methods


class CYLink_set_List : public CYLink_set_List_Base
{
    typedef CYLink_set_List_Base Tparent;
public:
    // constructor
    CYLink_set_List(void);
    // destructor
    ~CYLink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CYLink_set_List(const CYLink_set_List& value);
    CYLink_set_List& operator=(const CYLink_set_List& value);

};



/////////////////// CYLink_set_List inline methods

// constructor
inline
CYLink_set_List::CYLink_set_List(void)
{
}


/////////////////// end of CYLink_set_List inline methods


class CYLink_set : public CYLink_set_Base
{
    typedef CYLink_set_Base Tparent;
public:
    // constructor
    CYLink_set(void);
    // destructor
    ~CYLink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CYLink_set(const CYLink_set& value);
    CYLink_set& operator=(const CYLink_set& value);

};



/////////////////// CYLink_set inline methods

// constructor
inline
CYLink_set::CYLink_set(void)
{
}


/////////////////// end of CYLink_set inline methods


class CLLink_set_List3 : public CLLink_set_List3_Base
{
    typedef CLLink_set_List3_Base Tparent;
public:
    // constructor
    CLLink_set_List3(void);
    // destructor
    ~CLLink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CLLink_set_List3(const CLLink_set_List3& value);
    CLLink_set_List3& operator=(const CLLink_set_List3& value);

};



/////////////////// CLLink_set_List3 inline methods

// constructor
inline
CLLink_set_List3::CLLink_set_List3(void)
{
}


/////////////////// end of CLLink_set_List3 inline methods


class CLLink_set_List2 : public CLLink_set_List2_Base
{
    typedef CLLink_set_List2_Base Tparent;
public:
    // constructor
    CLLink_set_List2(void);
    // destructor
    ~CLLink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CLLink_set_List2(const CLLink_set_List2& value);
    CLLink_set_List2& operator=(const CLLink_set_List2& value);

};



/////////////////// CLLink_set_List2 inline methods

// constructor
inline
CLLink_set_List2::CLLink_set_List2(void)
{
}


/////////////////// end of CLLink_set_List2 inline methods


class CLLink_set_List : public CLLink_set_List_Base
{
    typedef CLLink_set_List_Base Tparent;
public:
    // constructor
    CLLink_set_List(void);
    // destructor
    ~CLLink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CLLink_set_List(const CLLink_set_List& value);
    CLLink_set_List& operator=(const CLLink_set_List& value);

};



/////////////////// CLLink_set_List inline methods

// constructor
inline
CLLink_set_List::CLLink_set_List(void)
{
}


/////////////////// end of CLLink_set_List inline methods


class CLLink_set : public CLLink_set_Base
{
    typedef CLLink_set_Base Tparent;
public:
    // constructor
    CLLink_set(void);
    // destructor
    ~CLLink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CLLink_set(const CLLink_set& value);
    CLLink_set& operator=(const CLLink_set& value);

};



/////////////////// CLLink_set inline methods

// constructor
inline
CLLink_set::CLLink_set(void)
{
}


/////////////////// end of CLLink_set inline methods


class CIVectorList : public CIVectorList_Base
{
    typedef CIVectorList_Base Tparent;
public:
    // constructor
    CIVectorList(void);
    // destructor
    ~CIVectorList(void);

private:
    // Prohibit copy constructor and assignment operator
    CIVectorList(const CIVectorList& value);
    CIVectorList& operator=(const CIVectorList& value);

};



/////////////////// CIVectorList inline methods

// constructor
inline
CIVectorList::CIVectorList(void)
{
}


/////////////////// end of CIVectorList inline methods


class CIVector : public CIVector_Base
{
    typedef CIVector_Base Tparent;
public:
    // constructor
    CIVector(void);
    // destructor
    ~CIVector(void);

private:
    // Prohibit copy constructor and assignment operator
    CIVector(const CIVector& value);
    CIVector& operator=(const CIVector& value);

};



/////////////////// CIVector inline methods

// constructor
inline
CIVector::CIVector(void)
{
}


/////////////////// end of CIVector inline methods


class CIMatrixListSet : public CIMatrixListSet_Base
{
    typedef CIMatrixListSet_Base Tparent;
public:
    // constructor
    CIMatrixListSet(void);
    // destructor
    ~CIMatrixListSet(void);

private:
    // Prohibit copy constructor and assignment operator
    CIMatrixListSet(const CIMatrixListSet& value);
    CIMatrixListSet& operator=(const CIMatrixListSet& value);

};



/////////////////// CIMatrixListSet inline methods

// constructor
inline
CIMatrixListSet::CIMatrixListSet(void)
{
}


/////////////////// end of CIMatrixListSet inline methods


class CIMatrixList : public CIMatrixList_Base
{
    typedef CIMatrixList_Base Tparent;
public:
    // constructor
    CIMatrixList(void);
    // destructor
    ~CIMatrixList(void);

private:
    // Prohibit copy constructor and assignment operator
    CIMatrixList(const CIMatrixList& value);
    CIMatrixList& operator=(const CIMatrixList& value);

};



/////////////////// CIMatrixList inline methods

// constructor
inline
CIMatrixList::CIMatrixList(void)
{
}


/////////////////// end of CIMatrixList inline methods


class CIMatrix : public CIMatrix_Base
{
    typedef CIMatrix_Base Tparent;
public:
    // constructor
    CIMatrix(void);
    // destructor
    ~CIMatrix(void);

private:
    // Prohibit copy constructor and assignment operator
    CIMatrix(const CIMatrix& value);
    CIMatrix& operator=(const CIMatrix& value);

};



/////////////////// CIMatrix inline methods

// constructor
inline
CIMatrix::CIMatrix(void)
{
}


/////////////////// end of CIMatrix inline methods


class CILink_set_List3 : public CILink_set_List3_Base
{
    typedef CILink_set_List3_Base Tparent;
public:
    // constructor
    CILink_set_List3(void);
    // destructor
    ~CILink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CILink_set_List3(const CILink_set_List3& value);
    CILink_set_List3& operator=(const CILink_set_List3& value);

};



/////////////////// CILink_set_List3 inline methods

// constructor
inline
CILink_set_List3::CILink_set_List3(void)
{
}


/////////////////// end of CILink_set_List3 inline methods


class CILink_set_List2 : public CILink_set_List2_Base
{
    typedef CILink_set_List2_Base Tparent;
public:
    // constructor
    CILink_set_List2(void);
    // destructor
    ~CILink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CILink_set_List2(const CILink_set_List2& value);
    CILink_set_List2& operator=(const CILink_set_List2& value);

};



/////////////////// CILink_set_List2 inline methods

// constructor
inline
CILink_set_List2::CILink_set_List2(void)
{
}


/////////////////// end of CILink_set_List2 inline methods


class CILink_set_List : public CILink_set_List_Base
{
    typedef CILink_set_List_Base Tparent;
public:
    // constructor
    CILink_set_List(void);
    // destructor
    ~CILink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CILink_set_List(const CILink_set_List& value);
    CILink_set_List& operator=(const CILink_set_List& value);

};



/////////////////// CILink_set_List inline methods

// constructor
inline
CILink_set_List::CILink_set_List(void)
{
}


/////////////////// end of CILink_set_List inline methods


class CILink_set : public CILink_set_Base
{
    typedef CILink_set_Base Tparent;
public:
    // constructor
    CILink_set(void);
    // destructor
    ~CILink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CILink_set(const CILink_set& value);
    CILink_set& operator=(const CILink_set& value);

};



/////////////////// CILink_set inline methods

// constructor
inline
CILink_set::CILink_set(void)
{
}


/////////////////// end of CILink_set inline methods


class CFLink_set_List3 : public CFLink_set_List3_Base
{
    typedef CFLink_set_List3_Base Tparent;
public:
    // constructor
    CFLink_set_List3(void);
    // destructor
    ~CFLink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CFLink_set_List3(const CFLink_set_List3& value);
    CFLink_set_List3& operator=(const CFLink_set_List3& value);

};



/////////////////// CFLink_set_List3 inline methods

// constructor
inline
CFLink_set_List3::CFLink_set_List3(void)
{
}


/////////////////// end of CFLink_set_List3 inline methods


class CFLink_set_List2 : public CFLink_set_List2_Base
{
    typedef CFLink_set_List2_Base Tparent;
public:
    // constructor
    CFLink_set_List2(void);
    // destructor
    ~CFLink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CFLink_set_List2(const CFLink_set_List2& value);
    CFLink_set_List2& operator=(const CFLink_set_List2& value);

};



/////////////////// CFLink_set_List2 inline methods

// constructor
inline
CFLink_set_List2::CFLink_set_List2(void)
{
}


/////////////////// end of CFLink_set_List2 inline methods


class CFLink_set_List : public CFLink_set_List_Base
{
    typedef CFLink_set_List_Base Tparent;
public:
    // constructor
    CFLink_set_List(void);
    // destructor
    ~CFLink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CFLink_set_List(const CFLink_set_List& value);
    CFLink_set_List& operator=(const CFLink_set_List& value);

};



/////////////////// CFLink_set_List inline methods

// constructor
inline
CFLink_set_List::CFLink_set_List(void)
{
}


/////////////////// end of CFLink_set_List inline methods


class CFLink_set : public CFLink_set_Base
{
    typedef CFLink_set_Base Tparent;
public:
    // constructor
    CFLink_set(void);
    // destructor
    ~CFLink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CFLink_set(const CFLink_set& value);
    CFLink_set& operator=(const CFLink_set& value);

};



/////////////////// CFLink_set inline methods

// constructor
inline
CFLink_set::CFLink_set(void)
{
}


/////////////////// end of CFLink_set inline methods


class CCLink_set_List3 : public CCLink_set_List3_Base
{
    typedef CCLink_set_List3_Base Tparent;
public:
    // constructor
    CCLink_set_List3(void);
    // destructor
    ~CCLink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CCLink_set_List3(const CCLink_set_List3& value);
    CCLink_set_List3& operator=(const CCLink_set_List3& value);

};



/////////////////// CCLink_set_List3 inline methods

// constructor
inline
CCLink_set_List3::CCLink_set_List3(void)
{
}


/////////////////// end of CCLink_set_List3 inline methods


class CCLink_set_List2 : public CCLink_set_List2_Base
{
    typedef CCLink_set_List2_Base Tparent;
public:
    // constructor
    CCLink_set_List2(void);
    // destructor
    ~CCLink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CCLink_set_List2(const CCLink_set_List2& value);
    CCLink_set_List2& operator=(const CCLink_set_List2& value);

};



/////////////////// CCLink_set_List2 inline methods

// constructor
inline
CCLink_set_List2::CCLink_set_List2(void)
{
}


/////////////////// end of CCLink_set_List2 inline methods


class CCLink_set_List : public CCLink_set_List_Base
{
    typedef CCLink_set_List_Base Tparent;
public:
    // constructor
    CCLink_set_List(void);
    // destructor
    ~CCLink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CCLink_set_List(const CCLink_set_List& value);
    CCLink_set_List& operator=(const CCLink_set_List& value);

};



/////////////////// CCLink_set_List inline methods

// constructor
inline
CCLink_set_List::CCLink_set_List(void)
{
}


/////////////////// end of CCLink_set_List inline methods


class CCLink_set : public CCLink_set_Base
{
    typedef CCLink_set_Base Tparent;
public:
    // constructor
    CCLink_set(void);
    // destructor
    ~CCLink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CCLink_set(const CCLink_set& value);
    CCLink_set& operator=(const CCLink_set& value);

};



/////////////////// CCLink_set inline methods

// constructor
inline
CCLink_set::CCLink_set(void)
{
}


/////////////////// end of CCLink_set inline methods


class CBLink_set_List3 : public CBLink_set_List3_Base
{
    typedef CBLink_set_List3_Base Tparent;
public:
    // constructor
    CBLink_set_List3(void);
    // destructor
    ~CBLink_set_List3(void);

private:
    // Prohibit copy constructor and assignment operator
    CBLink_set_List3(const CBLink_set_List3& value);
    CBLink_set_List3& operator=(const CBLink_set_List3& value);

};



/////////////////// CBLink_set_List3 inline methods

// constructor
inline
CBLink_set_List3::CBLink_set_List3(void)
{
}


/////////////////// end of CBLink_set_List3 inline methods


class CBLink_set_List2 : public CBLink_set_List2_Base
{
    typedef CBLink_set_List2_Base Tparent;
public:
    // constructor
    CBLink_set_List2(void);
    // destructor
    ~CBLink_set_List2(void);

private:
    // Prohibit copy constructor and assignment operator
    CBLink_set_List2(const CBLink_set_List2& value);
    CBLink_set_List2& operator=(const CBLink_set_List2& value);

};



/////////////////// CBLink_set_List2 inline methods

// constructor
inline
CBLink_set_List2::CBLink_set_List2(void)
{
}


/////////////////// end of CBLink_set_List2 inline methods


class CBLink_set_List : public CBLink_set_List_Base
{
    typedef CBLink_set_List_Base Tparent;
public:
    // constructor
    CBLink_set_List(void);
    // destructor
    ~CBLink_set_List(void);

private:
    // Prohibit copy constructor and assignment operator
    CBLink_set_List(const CBLink_set_List& value);
    CBLink_set_List& operator=(const CBLink_set_List& value);

};



/////////////////// CBLink_set_List inline methods

// constructor
inline
CBLink_set_List::CBLink_set_List(void)
{
}


/////////////////// end of CBLink_set_List inline methods


class CBLink_set : public CBLink_set_Base
{
    typedef CBLink_set_Base Tparent;
public:
    // constructor
    CBLink_set(void);
    // destructor
    ~CBLink_set(void);

private:
    // Prohibit copy constructor and assignment operator
    CBLink_set(const CBLink_set& value);
    CBLink_set& operator=(const CBLink_set& value);

};



/////////////////// CBLink_set inline methods

// constructor
inline
CBLink_set::CBLink_set(void)
{
}


/////////////////// end of CBLink_set inline methods


END_slri_SCOPE // namespace slri::


/*
* ===========================================================================
*
* $Log: objslrilinkset.hpp,v $
* Revision 1.2  2003/09/30 18:08:51  haocl
* merged DData, DTree, DNode, DKey into slrilibstruc,
* merge IVector*, IMatrix* into slrilinkset
*
*
* ===========================================================================
*/

#endif // OBJSLRILINKSET_HPP
/* Original file checksum: lines: 929, chars: 16773, CRC32: 55637b2b */
